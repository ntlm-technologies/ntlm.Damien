name: Create Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: windows-latest

    steps:
      - name: Checkout repository content
        uses: actions/checkout@v4  # Action à jour pour cloner le dépôt

      - name: Set up .NET
        uses: actions/setup-dotnet@v4  # Action à jour pour configurer .NET
        with:
          dotnet-version: '8.x'

      - name: Build project
        run: dotnet publish ./ntlm.Damien.Win/ntlm.Damien.Win.csproj --configuration Release --output ./publish

      - name: Verify build output
        run: |
          echo "Listing contents of the publish directory:"
          Get-ChildItem ./publish

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1  # Dernière version stable
        with:
          tag_name: 'v1.0.${{ github.run_number }}'
          release_name: 'Release v1.0.${{ github.run_number }}'
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Log upload_url
        run: |
          echo "Upload URL: ${{ steps.create_release.outputs.upload_url }}"

      - name: Upload EXE to Release
        uses: actions/upload-release-asset@v1  # Dernière version stable
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./publish/NtlmGithubManager.exe
          asset_name: NtlmGithubManager.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install GitHub CLI
        run: sudo apt-get install gh

      - name: List release assets
        run: |
          echo "Listing all assets for the release..."
          gh release view ${{ github.ref }} --json assets --jq '.assets[] | {name, id}'

      - name: Remove Source Code assets
        run: |
          ASSET_IDS=$(gh release view ${{ github.ref }} --json assets --jq '.assets[] | select(.name | test("Source code")) | .id')
          for ASSET_ID in $ASSET_IDS; do
            gh release delete-asset ${{ github.ref }} $ASSET_ID --yes
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Passer le token pour authentification
